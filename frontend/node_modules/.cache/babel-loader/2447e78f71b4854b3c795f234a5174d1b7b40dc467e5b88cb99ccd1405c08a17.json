{"ast":null,"code":"var _jsxFileName = \"/home/libre/Documentos/SMTPM/frontend/src/components/Auth/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext'; // Verifique o caminho correto\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    login\n  } = useAuth(); // Certifique-se de que o hook est� funcionando\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/api/auth/login', formData);\n      const {\n        user,\n        token\n      } = response.data;\n      login(user, token); // Atualiza o contexto com o usu�rio e token\n      navigate('/home');\n    } catch (err) {\n      var _err$response;\n      console.error('Erro ao fazer login:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"FZWvVOUnN2Y6L3hdehUNszDhZ5E=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","api","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","login","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","user","token","data","err","_err$response","console","error","message","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/libre/Documentos/SMTPM/frontend/src/components/Auth/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext'; // Verifique o caminho correto\nimport api from '../../services/api';\n\nconst Login = () => {\n    const [formData, setFormData] = useState({ email: '', password: '' });\n    const { login } = useAuth(); // Certifique-se de que o hook est� funcionando\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await api.post('/api/auth/login', formData);\n            const { user, token } = response.data;\n\n            login(user, token); // Atualiza o contexto com o usu�rio e token\n            navigate('/home');\n        } catch (err) {\n            console.error('Erro ao fazer login:', err.response?.data.message);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n            <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n            <button type=\"submit\">Login</button>\n        </form>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,4BAA4B,CAAC,CAAC;AACtD,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACrE,MAAM;IAAEC;EAAM,CAAC,GAAGV,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAIC,CAAC,IAAK;IACxBN,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,iBAAiB,EAAEd,QAAQ,CAAC;MAC5D,MAAM;QAAEe,IAAI;QAAEC;MAAM,CAAC,GAAGH,QAAQ,CAACI,IAAI;MAErCb,KAAK,CAACW,IAAI,EAAEC,KAAK,CAAC,CAAC,CAAC;MACpBX,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,CAAC,OAAOa,GAAG,EAAE;MAAA,IAAAC,aAAA;MACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,GAAAF,aAAA,GAAED,GAAG,CAACL,QAAQ,cAAAM,aAAA,uBAAZA,aAAA,CAAcF,IAAI,CAACK,OAAO,CAAC;IACrE;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAM0B,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBACzB3B,OAAA;MAAO4B,IAAI,EAAC,OAAO;MAAChB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEV,QAAQ,CAACE,KAAM;MAACwB,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClFjC,OAAA;MAAO4B,IAAI,EAAC,UAAU;MAAChB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEV,QAAQ,CAACG,QAAS;MAACuB,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3FjC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf,CAAC;AAAC/B,EAAA,CA7BID,KAAK;EAAA,QAEWJ,OAAO,EACRD,WAAW;AAAA;AAAAsC,EAAA,GAH1BjC,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}